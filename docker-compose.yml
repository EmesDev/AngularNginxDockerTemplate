services:
  angular_example_1:
    build:
      context: ./angular_example_1
      dockerfile: Dockerfile
    container_name: angular_example_1
    volumes:
      - ./builds/angular_example_1:/app/dist/angular_example_1/browser
    networks:
      - angular-nginx-docker-template

  angular_example_2:
    build:
      context: ./angular_example_2
      dockerfile: Dockerfile
    container_name: angular_example_2
    volumes:
      - ./builds/angular_example_2:/app/dist/angular_example_2/browser
    networks:
      - angular-nginx-docker-template

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./builds:/usr/share/nginx/html
      - ./external/nginx/errors:/usr/share/nginx/html/errors
      - ./external/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./external/nginx/mime.types:/etc/nginx/mime.types
      - ./external/nginx/http.d:/etc/nginx/conf.d
      - ./external/nginx/cert:/etc/nginx/ssl
    depends_on:
      - angular_example_1
      - angular_example_2
    networks:
      - angular-nginx-docker-template

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - angular-nginx-docker-template

  prometheus:
    extends:
      file: /prometheus/docker-compose.yml
      service: prometheus
      depends_on:
        - nginx
    networks:
      - angular-nginx-docker-template

  grafana:
    extends:
      file: /grafana/docker-compose.yml
      service: grafana
      depends_on:
        - nginx
        - prometheus
    networks:
      - angular-nginx-docker-template

volumes:
  builds:
  portainer_data:

networks:
  angular-nginx-docker-template:
    driver: bridge
